<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- sql排序配置 -->
<mapper namespace="com.vst.defend.dao.config.VstSqlOrderDao">
	
	<select id="queryForList" parameterType="map" resultType="java.util.HashMap">
		SELECT * FROM vst_sql_order
		<where>
			<if test="vst_order_id != null and vst_order_id != ''">
				vst_order_id = #{vst_order_id}
			</if>
			<if test="vst_sql_id != null and vst_sql_id != ''">
				AND vst_sql_id = #{vst_sql_id}
			</if>
			<if test="vst_order_name != null and vst_order_name != ''">
				AND vst_order_name like '%${vst_order_name}%'
			</if>
			<if test="vst_order_sort != null and vst_order_sort != ''">
				AND vst_order_sort = #{vst_order_sort}
			</if>
			<if test="vst_order_state != null and vst_order_state != ''">
				AND vst_order_state = #{vst_order_state}
			</if>
			<if test="vst_order_name_eq != null and vst_order_name_eq != ''">
				AND vst_order_name = #{vst_order_name_eq}
			</if>
			<if test="vst_order_name_ne != null and vst_order_name_ne != ''">
				AND vst_order_name != #{vst_order_name_ne}
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="orderBy == null or orderBy == ''">
				vst_order_index DESC, vst_order_uptime DESC
			</when>
			<otherwise>
				${orderBy} ${order}
			</otherwise>
		</choose>
		<if test="limit != null and limit != ''">
			LIMIT #{limit}
		</if>
		<if test="offset != null and offset != ''">
			OFFSET #{offset}
		</if>
	</select>
	
	<select id="queryCount" parameterType="map" resultType="int">
		SELECT count(1) FROM vst_sql_order
		<where>
			<if test="vst_order_id != null and vst_order_id != ''">
				vst_order_id = #{vst_order_id}
			</if>
			<if test="vst_sql_id != null and vst_sql_id != ''">
				AND vst_sql_id = #{vst_sql_id}
			</if>
			<if test="vst_order_name != null and vst_order_name != ''">
				AND vst_order_name like '%${vst_order_name}%'
			</if>
			<if test="vst_order_sort != null and vst_order_sort != ''">
				AND vst_order_sort = #{vst_order_sort}
			</if>
			<if test="vst_order_state != null and vst_order_state != ''">
				AND vst_order_state = #{vst_order_state}
			</if>
			<if test="vst_order_name_eq != null and vst_order_name_eq != ''">
				AND vst_order_name = #{vst_order_name_eq}
			</if>
			<if test="vst_order_name_ne != null and vst_order_name_ne != ''">
				AND vst_order_name != #{vst_order_name_ne}
			</if>
		</where>
	</select>
	
	<select id="queryForListAsBean" parameterType="map" resultType="VstSqlOrder">
		SELECT * FROM vst_sql_order
		<where>
			<if test="vst_order_id != null and vst_order_id != ''">
				vst_order_id = #{vst_order_id}
			</if>
			<if test="vst_sql_id != null and vst_sql_id != ''">
				AND vst_sql_id = #{vst_sql_id}
			</if>
			<if test="vst_order_name != null and vst_order_name != ''">
				AND vst_order_name like '%${vst_order_name}%'
			</if>
			<if test="vst_order_sort != null and vst_order_sort != ''">
				AND vst_order_sort = #{vst_order_sort}
			</if>
			<if test="vst_order_state != null and vst_order_state != ''">
				AND vst_order_state = #{vst_order_state}
			</if>
			<if test="vst_order_name_eq != null and vst_order_name_eq != ''">
				AND vst_order_name = #{vst_order_name_eq}
			</if>
			<if test="vst_order_name_ne != null and vst_order_name_ne != ''">
				AND vst_order_name != #{vst_order_name_ne}
			</if>
		</where>
	</select>
	
	<select id="queryById" parameterType="String" resultType="map">
		SELECT * FROM vst_sql_order
		WHERE vst_order_id = #{vst_order_id}
	</select>
	
	<insert id="insert" parameterType="VstSqlOrder" >
		INSERT INTO vst_sql_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="vst_order_id != null">
				vst_order_id,
		  	</if>
			<if test="vst_sql_id != null">
				vst_sql_id,
		  	</if>
			<if test="vst_order_name != null">
				vst_order_name,
		  	</if>
			<if test="vst_order_sort != null">
				vst_order_sort,
		  	</if>
			<if test="vst_order_index != null">
				vst_order_index,
		  	</if>
			<if test="vst_order_state != null">
				vst_order_state,
		  	</if>
			<if test="vst_order_addtime != null">
				vst_order_addtime,
		  	</if>
		  	<if test="vst_order_creator != null">
				vst_order_creator,
		  	</if>
		  	<if test="vst_order_summary != null">
				vst_order_summary,
		  	</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="vst_order_id != null">
				#{vst_order_id},
		  	</if>
			<if test="vst_sql_id != null">
				#{vst_sql_id},
		  	</if>
			<if test="vst_order_name != null">
				#{vst_order_name},
		  	</if>
		  	<if test="vst_order_sort != null">
				#{vst_order_sort},
		  	</if>
		  	<if test="vst_order_index != null">
				#{vst_order_index},
		  	</if>
		  	<if test="vst_order_state != null">
				#{vst_order_state},
		  	</if>
		  	<if test="vst_order_addtime != null">
				#{vst_order_addtime},
		  	</if>
		  	<if test="vst_order_creator != null">
				#{vst_order_creator},
		  	</if>
			<if test="vst_order_summary != null">
				#{vst_order_summary},
		  	</if>
		</trim>
	</insert>
	
	<update id="update" parameterType="VstSqlOrder">
		UPDATE vst_sql_order
		<set>
			<if test="vst_sql_id != null">
				vst_sql_id = #{vst_sql_id},
		  	</if>
			<if test="vst_order_name != null">
				vst_order_name = #{vst_order_name},
		  	</if>
		  	<if test="vst_order_sort != null">
				vst_order_sort = #{vst_order_sort},
		  	</if>
		  	<if test="vst_order_index != null">
				vst_order_index = #{vst_order_index},
		  	</if>
		  	<if test="vst_order_state != null">
				vst_order_state = #{vst_order_state},
		  	</if>
		  	<if test="vst_order_uptime != null">
				vst_order_uptime = #{vst_order_uptime},
		  	</if>
		  	<if test="vst_order_updator != null">
				vst_order_updator = #{vst_order_updator},
		  	</if>
			<if test="vst_order_summary != null">
				vst_order_summary = #{vst_order_summary},
		  	</if>
		</set>
		WHERE vst_order_id = #{vst_order_id}
	</update>
	
	<update id="modifyState" parameterType="map">
		UPDATE vst_sql_order
		<set>
		  	<if test="vst_order_state != null">
				vst_order_state = #{vst_order_state},
		  	</if>
		  	<if test="vst_order_uptime != null">
				vst_order_uptime = #{vst_order_uptime},
		  	</if>
		  	<if test="vst_order_updator != null">
				vst_order_updator = #{vst_order_updator},
		  	</if>
		</set>
		WHERE vst_order_id IN
		<foreach collection="list_ids" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	
	<delete id="delete" parameterType="map">
		DELETE FROM vst_sql_order
		WHERE vst_order_id IN
		<foreach collection="list_ids" item="id" open="(" separator="," close=")">
			#{id}
	    </foreach>
	</delete>
	
	<!-- 批量修改 -->
	<update id="batchUpdate" parameterType="list">
    	update vst_sql_order 
        <trim prefix="set" suffixOverrides=",">
			<trim prefix="vst_order_index =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
			    	<if test="i.vst_order_index != null">
			        	when vst_order_id=#{i.vst_order_id} then #{i.vst_order_index}
			    	</if>
				</foreach>
			</trim>
			<trim prefix="vst_order_state =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
			    	<if test="i.vst_order_state != null">
			        	when vst_order_id=#{i.vst_order_id} then #{i.vst_order_state}
			    	</if>
				</foreach>
			</trim>
			<trim prefix="vst_order_uptime =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
			    	<if test="i.vst_order_uptime != null">
			        	when vst_order_id=#{i.vst_order_id} then #{i.vst_order_uptime}
			    	</if>
				</foreach>
			</trim>
			<trim prefix="vst_order_updator =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
			    	<if test="i.vst_order_updator != null">
			        	when vst_order_id=#{i.vst_order_id} then #{i.vst_order_updator}
			    	</if>
				</foreach>
			</trim>
		</trim>
        <where>
			<foreach collection="list" separator="or" item="i" index="index" >
	        	vst_order_id = #{i.vst_order_id}
			</foreach>
		</where>
	</update>
	
</mapper>